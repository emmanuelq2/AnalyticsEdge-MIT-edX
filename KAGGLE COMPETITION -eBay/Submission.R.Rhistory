eBayTrain = read.csv("eBayiPadTrain.csv", stringsAsFactors=FALSE)
eBayTest = read.csv("eBayiPadTest.csv", stringsAsFactors=FALSE)
str(eBayTrain)
str(eBayTest)
SimpleMod = glm(sold ~ startprice + biddable + productline, data=eBayTrain, family=binomial)
PredTestLog = predict(SimpleMod, newdata=eBayTest, type="response")
PredTrainLog = predict(SimpleMod, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainLog > 0.5)
acc = (845+636) / nrow(eBayTrain)
acc
library(ROCR)
ROCRpredLog = prediction(PredTrainLog, eBayTrain$sold)
as.numeric(performance(ROCRpredLog, "auc")@y.values)
SimpleMod2 = glm(sold ~., data=eBayTrain, family=binomial)
PredTestLog = predict(SimpleMod2, newdata=eBayTest, type="response")
SimpleMod2 = glm(sold ~. - description, data=eBayTrain, family=binomial)
PredTestLog2 = predict(SimpleMod2, newdata=eBayTest, type="response")
eBayTrain$description = as.factor(eBayTrain$description)
eBayTest$description = as.factor(eBayTest$description)
str(eBayTrain)
str(eBayTest)
eBayTrain$condition = as.factor(eBayTrain$condition)
eBayTest$condition = as.factor(eBayTest$condition)
eBayTest$cellular = as.factor(eBayTest$cellular)
eBayTest$carrier = as.factor(eBayTest$carrier)
eBayTrain$carrier = as.factor(eBayTrain$carrier)
eBayTrain$cellular = as.factor(eBayTrain$cellular)
eBayTrain$color = as.factor(eBayTrain$color)
eBayTest$color = as.factor(eBayTest$color)
eBayTrain$storage = as.factor(eBayTrain$storage)
eBayTest$storage = as.factor(eBayTest$storage)
eBayTrain$productline = as.factor(eBayTrain$productline)
str(eBayTrain)
str(eBayTest)
eBayTest$productline = as.factor(eBayTest$productline)
SimpleModAgain = glm(sold ~ startprice + biddable + productline, data=eBayTrain, family=binomial)
PredTestLog = predict(SimpleModAgain, newdata=eBayTest, type="response")
PredTrainLog = predict(SimpleModAgain, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainLog > 0.5)
ROCRpredLog = prediction(PredTrainLog, eBayTrain$sold)
as.numeric(performance(ROCRpredLog, "auc")@y.values)
SimpleMod2 = glm(sold ~. - description, data=eBayTrain, family=binomial)
PredTestLog2 = predict(SimpleMod2, newdata=eBayTest, type="response")
SimpleMod2 = glm(sold ~., data=eBayTrain, family=binomial)
PredTestLog2 = predict(SimpleMod2, newdata=eBayTest, type="response")
eBayTest$description = as.numeric(eBayTest$description)
eBayTrain$description = as.numeric(eBayTrain$description)
str(eBayTrain)
str(eBayTest)
SimpleMod2 = glm(sold ~., data=eBayTrain, family=binomial)
PredTestLog2 = predict(SimpleMod2, newdata=eBayTest, type="response")
PredTrainLog2 = predict(SimpleMod2, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainLog2 > 0.5)
ROCRpredLog = prediction(PredTrainLog2, eBayTrain$sold)
as.numeric(performance(ROCRpredLog2, "auc")@y.values)
as.numeric(performance(ROCRpredLog, "auc")@y.values)
SimpleMod2 = glm(sold ~. - description - UniqueID, data=eBayTrain, family=binomial)
SimpleMod3 = glm(sold ~. - description - UniqueID, data=eBayTrain, family=binomial)
PredTestLog3 = predict(SimpleMod3, newdata=eBayTest, type="response")
PredTrainLog3 = predict(SimpleMod3, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainLog3 > 0.5)
ROCRpredLog = prediction(PredTrainLog3, eBayTrain$sold)
as.numeric(performance(ROCRpredLog2, "auc")@y.values)
as.numeric(performance(ROCRpredLog, "auc")@y.values)
SimpleMod4 = glm(sold ~. - UniqueID, data=eBayTrain, family=binomial)
PredTestLog4 = predict(SimpleMod4, newdata=eBayTest, type="response")
PredTrainLog4 = predict(SimpleMod4, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainLog4 > 0.5)
ROCRpredLog = prediction(PredTrainLog4, eBayTrain$sold)
as.numeric(performance(ROCRpredLog, "auc")@y.values)
SimpleMod5 = glm(sold ~. biddable + startprice + productline, data=eBayTrain, family=binomial)
SimpleMod5 = glm(sold ~ biddable + startprice + productline, data=eBayTrain, family=binomial)
PredTestLog5 = predict(SimpleMod5, newdata=eBayTest, type="response")
PredTrainLog5 = predict(SimpleMod5, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainLog5 > 0.5)
ROCRpredLog = prediction(PredTrainLog5, eBayTrain$sold)
as.numeric(performance(ROCRpredLog, "auc")@y.values)
library(randomForest)
StevensForest = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain)
eBayRF = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain)
PredTestRF = predict(eBayRF, newdata=eBayTest, type="response")
PredTestRF = predict(eBayRF, newdata=eBayTest)
eBayRF = randomForest(sold ~ biddable + startprice, data = eBayTrain)
PredTestRF = predict(eBayRF, newdata=eBayTest, type="response")
PredTrainRF = predict(eBayRF, newdata=eBayTest, type="response")
PredTrainRF = predict(eBayRF, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF > 0.5)
ROCRpredRF = prediction(PredTrainRF, eBayTrain$sold)
as.numeric(performance(ROCRpredRF, "auc")@y.values)
eBayRF2 = randomForest(sold ~., - productline, data = eBayTrain)
eBayRF2 = randomForest(sold ~. - productline, data = eBayTrain)
eBayRF2 = randomForest(sold ~. - productline - UniqueID, data = eBayTrain)
PredTestRF2 = predict(eBayRF2, newdata=eBayTest)
PredTrainRF2 = predict(eBayRF2, newdata=eBayTest, type="response")
table(eBayTrain$sold, PredTrainRF2 > 0.5)
PredTrainRF2 = predict(eBayRF2, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF2 > 0.5)
ROCRpredRF2 = prediction(PredTrainRF2, eBayTrain$sold)
as.numeric(performance(ROCRpredRF2, "auc")@y.values)
acc = (950+719)/nrow(eBayTrain)
acc
eBayRF3 = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain)
PredTrainRF3 = predict(eBayRF3, newdata=eBayTrain, type="response")
PredTestRF3 = predict(eBayRF3, newdata=eBayTest)
table(eBayTrain$sold, PredTrainRF3 > 0.5)
acc = (886+644) / nrow(eBayTrain)
acc
ROCRpredRF3 = prediction(PredTrainRF3, eBayTrain$sold)
as.numeric(performance(ROCRpredRF3, "auc")@y.values)
eBayRF3 = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain, ntree=200, nodesize=25)
eBayRF4 = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain, ntree=200, nodesize=25)
PredTestRF4 = predict(eBayRF4, newdata=eBayTest)
PredTrainRF4 = predict(eBayRF4, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF4 > 0.5)
acc = (882+642) / nrow(eBayTrain)
acc
ROCRpredRF4 = prediction(PredTrainRF4, eBayTrain$sold)
as.numeric(performance(ROCRpredRF4, "auc")@y.values)
eBayRF5 = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain, ntree=100, nodesize=15)
PredTestRF5 = predict(eBayRF5, newdata=eBayTest)
PredTrainRF5 = predict(eBayRF5, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF5 > 0.5)
acc = (878+637) / nrow(eBayTrain)
acc
ROCRpredRF5 = prediction(PredTrainRF5, eBayTrain$sold)
as.numeric(performance(ROCRpredRF5, "auc")@y.values)
eBayRF6 = randomForest(sold ~ biddable + startprice + productline, data = eBayTrain, ntree=50, nodesize=10)
PredTrainRF6 = predict(eBayRF6, newdata=eBayTrain, type="response")
PredTestRF6 = predict(eBayRF6, newdata=eBayTest)
table(eBayTrain$sold, PredTrainRF6 > 0.5)
acc = (865+645) / nrow(eBayTrain)
acc
ROCRpredRF6 = prediction(PredTrainRF6, eBayTrain$sold)
as.numeric(performance(ROCRpredRF6, "auc")@y.values)
eBayRF2 = randomForest(sold ~. - productline - UniqueID, data = eBayTrain, ntree=100, nodesize=15)
eBayRF2bis = randomForest(sold ~. - productline - UniqueID, data = eBayTrain, ntree=100, nodesize=15)
PredTestRF2bis = predict(eBayRF2bis, newdata=eBayTest)
PredTrainRF2bis = predict(eBayRF2bis, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF2bis > 0.5)
acc = (932+661)/nrow(eBayTrain)
acc
ROCRpredRF2bis = prediction(PredTrainRF2bis, eBayTrain$sold)
as.numeric(performance(ROCRpredRF2bis, "auc")@y.values)
eBayRF2ter = randomForest(sold ~. - productline - UniqueID, data = eBayTrain, ntree=200, nodesize=25)
PredTestRF2ter = predict(eBayRF2ter, newdata=eBayTest)
PredTrainRF2ter = predict(eBayRF2ter, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF2ter > 0.5)
acc = (914+646)/nrow(eBayTrain)
acc
ROCRpredRF2ter = prediction(PredTrainRF2ter, eBayTrain$sold)
as.numeric(performance(ROCRpredRF2ter, "auc")@y.values)
eBayRF24 = randomForest(sold ~. - productline - UniqueID, data = eBayTrain, ntree=50, nodesize=10)
PredTestRF24 = predict(eBayRF24, newdata=eBayTest)
table(eBayTrain$sold, PredTrainRF24 > 0.5)
PredTrainRF24 = predict(eBayRF24, newdata=eBayTrain, type="response")
table(eBayTrain$sold, PredTrainRF24 > 0.5)
ROCRpredRF24 = prediction(PredTrainRF24, eBayTrain$sold)
as.numeric(performance(ROCRpredRF24, "auc")@y.values)
acc = (943+689)/nrow(eBayTrain)
acc
MySubmission = data.frame(UniqueID = eBayTest$UniqueID, Probability1 = PredTestRF24)
write.csv(MySubmission, "SubmissionPredRFALLntree50nodesize10-0.8764.csv", row.names=FALSE)
MySubmission = data.frame(UniqueID = eBayTest$UniqueID, Probability1 = PredTestRF2bis)
write.csv(MySubmission, "SubmissionPredRFALLntree100nodesize25-0.8764.csv", row.names=FALSE)
MySubmission = data.frame(UniqueID = eBayTest$UniqueID, Probability1 = PredTestRF2)
write.csv(MySubmission, "SubmissionPredRFALL-acc-0.8968.csv", row.names=FALSE)
save.image("F:\\MOOC\\ANALYTICS EDGE\\KAGGLE COMPETITION\\.RData")
quit()
